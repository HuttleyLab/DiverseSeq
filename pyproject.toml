[build-system]
requires = ["flit_core >=3.2,<4"]
build-backend = "flit_core.buildapi"

[project]
name = "diverse_seq"
authors = [
    { name = "Gavin Huttley", email = "Gavin.Huttley@anu.edu.au"},
]
keywords = ["biology", "genomics", "statistics", "phylogeny", "evolution", "bioinformatics"]
readme = "README.md"
license = { file = "LICENSE" }
requires-python = ">=3.10,<3.14"
dependencies = [
    "attrs",
    "click",
    "cogent3",
    "hdf5plugin",
    "h5py!=3.12.0",
    "loky",
    "numpy",
    "rich",
    "scitrack",
    "scikit-learn",
    ]
classifiers = [
        "Development Status :: 3 - Alpha",
        "Intended Audience :: Science/Research",
        "License :: OSI Approved :: BSD License",
        "Topic :: Scientific/Engineering :: Bio-Informatics",
        "Topic :: Software Development :: Libraries :: Python Modules",
        "Operating System :: OS Independent",
        "Programming Language :: Python :: 3.10",
        "Programming Language :: Python :: 3.11",
        "Programming Language :: Python :: 3.12",
        "Programming Language :: Python :: 3.13",
    ]
# the following are inferred from the source code
dynamic = ["version", "description"]

[project.urls]
Documentation = "https://github.com/HuttleyLab/DiverseSeq"
"Bug Tracker" = "https://github.com/HuttleyLab/DiverseSeq/issues"
"Source Code" = "https://github.com/HuttleyLab/DiverseSeq/"

[tool.flit.sdist]
include = ["tests/*"]

[project.optional-dependencies]
test = [
    "nox",
    "pytest",
    "pytest-cov",
    "pytest-xdist",
    "ruff==0.9.4",
]
dev = [
    "cogapp",
    "docformatter",
    "flit",
    "nox",
    "pytest",
    "pytest-cov",
    "pytest-xdist",
    "ruff==0.9.4",
]
doc  = ["click",
        "ipykernel",
        "ipython",
        "ipywidgets",
        "jupyter-sphinx",
        "jupyter_client",
        "jupyterlab",
        "jupytext",
        "kaleido",
        "nbconvert>5.4",
        "nbformat",
        "nbsphinx",
        "numpydoc",
        "piqtree",
        "pandas",
        "plotly",
        "requests",
        "statsmodels",
        ]

[project.scripts]
dvs = "diverse_seq.cli:main"

[project.entry-points."cogent3.app"]
dvs_nmost = "diverse_seq.records:dvs_nmost"
dvs_max = "diverse_seq.records:dvs_max"
dvs_ctree = "diverse_seq.cluster:dvs_ctree"
dvs_par_ctree = "diverse_seq.cluster:dvs_par_ctree"

[tool.pytest.ini_options]
addopts = ["--strict-config", "-ra"]
testpaths = "tests"

[tool.uv]
reinstall-package = ["diverse_seq"]

[tool.ruff]
exclude = [
    ".bzr",
    ".direnv",
    ".eggs",
    ".git",
    ".git-rewrite",
    ".hg",
    ".ipynb_checkpoints",
    ".mypy_cache",
    ".nox",
    ".pants.d",
    ".pyenv",
    ".pytest_cache",
    ".pytype",
    ".ruff_cache",
    ".svn",
    ".tox",
    ".venv",
    ".vscode",
    "__pypackages__",
    "_build",
    "buck-out",
    "build",
    "dist",
    "node_modules",
    "site-packages",
    "venv",
]

# Same as Black.
line-length = 88
indent-width = 4

target-version = "py310"

[tool.ruff.lint]
# Enable Pyflakes (`F`) and a subset of the pycodestyle (`E`)  codes by default.
# Unlike Flake8, Ruff doesn't enable pycodestyle warnings (`W`) or
# McCabe complexity (`C901`) by default.
select = ["ALL"]
# turn of warnings for:
# - import numpy as np, we pefer explicit and 3 extra characters is no burden
# - strict camel case class names, we name classes with a __call__ method like
#   functions since their instance behaves like a function
ignore = ["EXE002", "FA100", "E501", "D", "ICN001", "N801"]

# Allow fix for all enabled rules (when `--fix`) is provided.
fixable = ["ALL"]
unfixable = []

# Allow unused variables when underscore-prefixed.
dummy-variable-rgx = "^(_+|(_+[a-zA-Z0-9_]*[a-zA-Z0-9]+?))$"

[tool.ruff.lint.per-file-ignores]
"src/**/cli.py" = [
    "FBT001", # allow bool positionals in cli functions
]
"tests/**/*.py" = [
    "S101", # asserts allowed in tests...
    "INP001", # __init__.py files are not required...
    "ANN",
    "N802",
    "N803"
]
"noxfile.py" = [
    "S101", # asserts allowed in tests...
    "INP001", # __init__.py files are not required...
    "ANN",
    "N802",
    "N803"
]

[tool.ruff.format]
# Like Black, use double quotes for strings.
quote-style = "double"

# Like Black, indent with spaces, rather than tabs.
indent-style = "space"

# Like Black, respect magic trailing commas.
skip-magic-trailing-comma = false

# Like Black, automatically detect the appropriate line ending.
line-ending = "lf"
docstring-code-format = true

# Set the line length limit used when formatting code snippets in
# docstrings.
#
# This only has an effect when the `docstring-code-format` setting is
# enabled.
docstring-code-line-length = "dynamic"

[tool.ruff.lint.isort]
# group diverse_seq imports last
known-first-party = ["diverse_seq"]
